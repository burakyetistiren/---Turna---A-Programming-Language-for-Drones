digit   [0-9]
sign    [+-]
integer {sign}?{digit}+
float {sign}?{digit}*(\.)?{digit}+
letter  [a-zA-Z]
char     \'[^']\'
string     \"[^"]*\"
initial ({letter}|$|_)
identifier {initial}({initial}|{digit})*
literal ({integer}|{float}|{char}|{string})

func "func"
call "call"
get_incl "getIncl"
get_altitude "getAltitude"
get_speed "getSpeed"
get_temp "getTemp" 
get_acceleration "getAcceleration" 
set_incl "setIncl"
set_altitude "setAltitude"
set_speed "setSpeed"
set_temp "setTemp"
set_acceleration "setAcceleration"
turn_on_cam "turnOnCam" 
turn_off_cam "turnOffCam" 
take_pict "takePict"
get_current_time_stamp "getCurrentTimeStamp"
connect_wifi "connectWifi"
take_off "takeOff"
land "land"
fly_up_with_distance "flyUpWithDistance"
fly_down_with_distance "flyDownWithDistance"
fly_left_with_distance "flyLeftWithDistance"
fly_right_with_distance "flyRightWithDistance"
fly_forward_with_distance "flyForwardWithDistance"
fly_back_with_distance "flyBackWithDistance"
rotate_cw_with_angle "rotateCwWithAngle"
rotate_ccw_with_angle "rotateCcwWithAngle"
flip_forward "flipForward"
flip_backward "flipBackward"
flip_left "flipLeft"
flip_right "flipRight"
hover_for_seconds "hoverForSeconds"
yaw_right_with_degrees "yawRightWithDegrees"
yaw_left_with_degrees "yawLeftWithDegrees"
hover "hover"
scan_int "scanInt" 
scan_str "scanStr" 
scan_float "scanFloat"
scan_bool "scanBool"
scan_char "scanChar"
print "print"
print_nl "print_nl"

comment "#".*|"{"[^\}]*"}"

assign_op "="
semicolon ";"
incrmnt_op "++"
decrmnt_op "--"

true "true"
false "false"
if "if"
else "else"
while "while"
for "for"
return "return"
start "start"
end "end"

lp "("
rp ")"
rbrace "}"
comma ","

const "const"
type_bool "type_bool"
type_int "type_int"
type_float "type_float"
type_char "type_char"
type_string "type_string"
void "void"

plus "+"
minus "-"
mul "*"
div "/"
mod "%"

eq_op (==|eq)
neq_op (!=|neq)
lt_op (<|lt)
lte_op (<=|lte)
gt_op (>|gt)
gte_op (>=|gte)
not_op "!"
and (&&|and)
or (\|\||or)

%option yylineno
%%
{comment} return(COMMENT);
{func} return(FUNC);
{call} return(CALL);
{lp} return(LP);
{rp} return(RP);
{get_incl} return(GET_INCL);
{get_altitude} return(GET_ALTITUDE);
{get_temp} return(GET_TEMP);
{get_speed} return(GET_SPEED);
{get_acceleration} return(GET_ACCELERATION);
{set_incl} return(SET_INCL);
{set_altitude} return(SET_ALTITUDE);
{set_temp} return(SET_TEMP);
{set_speed} return(SET_SPEED);
{set_acceleration} return(SET_ACCELERATION); 
{turn_on_cam} return(TURN_ON_CAM);
{turn_off_cam} return(TURN_OFF_CAM);
{take_pict} return(TAKE_PICT);
{get_current_time_stamp} return(GET_CURRENT_TIME_STAMP);
{connect_wifi} return(CONNECT_WIFI);
{take_off} return(TAKE_OFF);
{land} return(LAND);
{fly_up_with_distance} return(FLY_UP_WITH_DISTANCE);
{fly_down_with_distance} return(FLY_DOWN_WITH_DISTANCE);
{fly_left_with_distance} return(FLY_LEFT_WITH_DISTANCE);
{fly_right_with_distance} return(FLY_RIGHT_WITH_DISTANCE);
{fly_forward_with_distance} return(FLY_FORWARD_WITH_DISTANCE);
{fly_back_with_distance} return(FLY_BACK_WITH_DISTANCE);
{rotate_cw_with_angle} return(ROTATE_CW_WITH_ANGLE);
{rotate_ccw_with_angle} return(ROTATE_CCW_WITH_ANGLE);
{flip_forward} return(FLIP_FORWARD);
{flip_backward} return(FLIP_BACKWARD);
{flip_left} return(FLIP_LEFT);
{flip_right} return(FLIP_RIGHT);
{hover_for_seconds} return(HOVER_FOR_SECONDS);
{yaw_right_with_degrees} return(YAW_RIGHT_WITH_DEGREES);
{yaw_left_with_degrees} return(YAW_LEFT_WITH_DEGREES);
{hover} return(HOVER);
{scan_int} return(SCAN_INT);
{scan_str} return(SCAN_STR);
{scan_float} return(SCAN_FLOAT);
{scan_bool} return(SCAN_BOOL);
{scan_char} return(SCAN_CHAR);
{print} return(PRINT);
{print_nl} return(PRINT_NL);
{semicolon} return(SEMICOLON);
{comma} return(COMMA);
{assign_op} return(ASSIGN_OP);
{incrmnt_op} return(INCREMENT_OP);
{decrmnt_op} return(DECREMENT_OP);
{eq_op} return(EQUAL_OP);
{neq_op} return(NOT_EQUAL_OP);
{lt_op} return(LESS_THAN_OP);
{lte_op} return(LESS_THAN_OR_EQUAL_OP);
{gt_op} return(GREATER_THAN_OP);
{gte_op} return(GREATER_THAN_OR_EQUAL_OP);
{not_op} return(NOT);
{and} return(AND);
{or} return(OR);
{const} return(CONST);
{type_bool} return(TYPE_BOOL);
{type_char} return(TYPE_CHAR);
{type_int} return(TYPE_INT);
{type_float} return(TYPE_FLOAT);
{type_string} return(TYPE_STRING);
{void} return(VOID);
{true} return(TRUE);
{false} return(FALSE);
{while} return(WHILE);
{for} return(FOR);
{start} return(START);
{end} return(END);
{if} return(IF);
{else} return(ELSE);
{return} return(RETURN);
{integer} return(INTEGER);
{float} return(FLOAT);
{identifier} return(IDENTIFIER);
{char} return(CHAR);
{string} return(STRING);
{plus} return(PLUS);
{minus} return(MINUS);
{mul} return(MULTIPLICATION);
{div} return(DIVISION);
{mod} return(MODULO);
"\n"  { }
{rbrace} return(RBRACE);
%% 
int yywrap() { return 1; }
